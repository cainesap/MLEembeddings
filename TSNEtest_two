import numpy as np
import matplotlib.pyplot as plt

import collections
from sklearn.manifold import TSNE



# code taken from https://github.com/williamleif/histwords/blob/master/viz/scripts/closest_over_time_chain.py .. k closest neighbours
#helpers is: https://github.com/williamleif/histwords/blob/master/viz/scripts/helpers.py containing links to directories

# We accept a list of words from command line
# to generate graphs for.

WORDS = helpers.get_words()


if __name__ == "__main__":
    embeddings = helpers.load_embeddings()
    all_lookups = {}
    all_sims = {}
    WORDS.sort()
    wordchain = "_".join(WORDS)

    helpers.clear_figure()
    for word1 in WORDS:
        time_sims, lookups, nearests, sims = helpers.get_time_sims(embeddings, word1)

        all_lookups.update(lookups)
        all_sims.update(sims)




    words = all_lookups.keys()
    values = [ all_lookups[word] for word in words ]
    fitted = helpers.fit_tsne(values)

    # draw the words onto the graph
    cmap = helpers.get_cmap(len(time_sims))

    # TODO: split the annotations up
    annotations = helpers.plot_words(WORDS, words, fitted, cmap, all_sims)
    if annotations:
        helpers.plot_annotations(annotations)

    helpers.savefig("%s_chain.png" % wordchain)


# for visualisation taken from : https://github.com/williamleif/histwords/blob/master/viz/scripts/closest_over_time_with_anns.py

WORDS = helpers.get_words()


if __name__ == "__main__":
    embeddings = helpers.load_embeddings()
    for word1 in WORDS:
        helpers.clear_figure()
        time_sims, lookups, nearests, sims = helpers.get_time_sims(embeddings, word1)

        words = lookups.keys()
        values = [ lookups[word] for word in words ]
        fitted = helpers.fit_tsne(values)
        if not len(fitted):
            print "Couldn't model word", word1
            continue

        # draw the words onto the graph
        cmap = helpers.get_cmap(len(time_sims))
        annotations = helpers.plot_words(word1, words, fitted, cmap, sims)

        if annotations:
            helpers.plot_annotations(annotations)

        helpers.savefig("%s_annotated" % word1)
        for year, sim in time_sims.iteritems():
            print year, sim









#https://github.com/williamleif/histwords/blob/master/viz/scripts/closest_over_time_with_shading.py

WORDS = helpers.get_words()
if __name__ == "__main__":
    embeddings = helpers.load_embeddings()

    for word1 in WORDS:
        time_sims, lookups, nearests, sims = helpers.get_time_sims(embeddings, word1)

        helpers.clear_figure()

        # we remove word1 from our words because we just want to plot the different
        # related words
        words = filter(lambda word: word.split("|")[0] != word1, lookups.keys())

        values = [ lookups[word] for word in words ]
        fitted = helpers.fit_tsne(values)
        if not len(fitted):
            print "Couldn't model word", word1
            continue

        cmap = helpers.get_cmap(len(time_sims))
        annotations = helpers.plot_words(word1, words, fitted, cmap, sims)

        helpers.savefig("%s_shaded" % word1)
        for year, sim in time_sims.iteritems():
            print year, sim
